namespace App\Models;

use ClaudioDekker\LaravelAuth\HasMultiFactorCredentials;
// use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Prunable;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Sanctum\HasApiTokens;

class User extends Authenticatable
{
    use HasApiTokens, HasFactory, HasMultiFactorCredentials, Notifiable, Prunable;

    /**
     * The attributes that are mass assignable.
     *
     * {!! '@' !!}var array<int, string>
     */
    protected $fillable = [
        'name',
@if($flavor === 'username-based')
        'username',
@endif
        'email',
        'password',
        'has_password',
        'recovery_codes',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * {!! '@' !!}var array<int, string>
     */
    protected $hidden = [
        'password',
        'recovery_codes',
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     *
     * {!! '@' !!}var array<string, string>
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
        'has_password' => 'boolean',
        'recovery_codes' => 'array',
    ];

    /**
     * Get the prunable model query.
     *
     * {!! ! '@' !!}return \Illuminate\Database\Eloquent\Builder
     */
    public function prunable()
    {
        return static::query()
          ->where('has_password', false)
          ->where('created_at', '<', now()->subHour())
          ->where('created_at', '>', now()->subDay())
          ->doesntHave('multiFactorCredentials');
    }
}
