@php
    $flavorTrait = str_replace("-", "", \Illuminate\Support\Str::title($flavor));
@endphp

namespace App\Http\Controllers\Auth;

use App\Providers\RouteServiceProvider;
use ClaudioDekker\LaravelAuth\Http\Controllers\VerifyEmailController as BaseController;
use Illuminate\Foundation\Auth\EmailVerificationRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;

class VerifyEmailController extends BaseController
{
    /**
     * Sends a response indicating that the email verification link has been resent.
     */
    protected function sendEmailVerificationSentResponse(Request $request): RedirectResponse
    {
        return redirect()->route('auth.settings')
            ->with('status', __('laravel-auth::auth.verification.sent'));
    }

    /**
     * Sends a response indicating that the email has already been verified.
     */
    protected function sendEmailAlreadyVerifiedResponse(Request $request): RedirectResponse
    {
        return redirect()->route('auth.settings')
            ->with('status', __('laravel-auth::auth.verification.already-verified'));
    }

    /**
     * Sends a response indicating that the email has been successfully verified.
     */
    protected function sendEmailSuccessfullyVerifiedResponse(Request $request): RedirectResponse
    {
        return redirect()->to(RouteServiceProvider::HOME ?? '/')
            ->with('status', __('laravel-auth::auth.verification.verified'));
    }

    /**
     * Handle an incoming request to (re)send the verification email.
     */
    public function store(Request $request): RedirectResponse
    {
        return parent::store($request);
    }

    /**
     * Handle an incoming request to confirm the email verification.
     */
    public function update(EmailVerificationRequest $request): RedirectResponse
    {
        return parent::update($request);
    }
}
