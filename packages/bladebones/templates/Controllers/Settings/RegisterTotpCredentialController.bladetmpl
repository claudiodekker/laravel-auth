@php
    $flavorTrait = str_replace("-", "", \Illuminate\Support\Str::title($flavor));
@endphp

namespace App\Http\Controllers\Auth\Settings;

use ClaudioDekker\LaravelAuth\Http\Controllers\Settings\RegisterTotpCredentialController as BaseController;
@if ($flavor !== 'email-based')
use ClaudioDekker\LaravelAuth\Http\Traits\{{ $flavorTrait }};
@endif
use ClaudioDekker\WordGenerator\Generator;
use Illuminate\Contracts\View\View;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Validation\ValidationException;

class RegisterTotpCredentialController extends BaseController
{
@php
    $uses = [];
    if ($flavor !== 'email-based') {
        $uses[] = $flavorTrait;
    }

    asort($uses);
@endphp
@if (count($uses) > 0)
@foreach($uses as $use)
    use {{ $use }};
@endforeach

@endif
    /**
     * Initialize the registration of a new time-based one-time-password credential.
     *
     * {!! '@' !!}see static::sendRegistrationInitializedResponse()
     *
     * {!! '@' !!}throws \ClaudioDekker\LaravelAuth\Methods\Totp\Exceptions\InvalidSecretException
     */
    public function initialize(Request $request): RedirectResponse
    {
        return parent::initialize($request);
    }

    /**
     * Display the view for confirming the time-based one-time-password credential registration.
     *
     * {!! '@' !!}see static::sendInvalidRegistrationStateResponse()
     * {!! '@' !!}see static::sendConfirmationPageResponse()
     */
    public function confirm(Request $request): View
    {
        return parent::confirm($request);
    }

    /**
     * Confirm and finalize the registration of the time-based one-time-password credential.
     *
     * {!! '@' !!}see static::sendInvalidRegistrationStateResponse()
     * {!! '@' !!}see static::sendInvalidConfirmationCodeResponse()
     * {!! '@' !!}see static::sendCredentialRegisteredResponse()
     */
    public function store(Request $request): RedirectResponse
    {
        return parent::store($request);
    }

    /**
     * Cancel the registration of the time-based one-time-password credential.
     *
     * {!! '@' !!}see static::sendRegistrationCancelledResponse()
     */
    public function cancel(Request $request): RedirectResponse
    {
        return parent::cancel($request);
    }

    /**
     * Sends a response indicating that the time-based one-time-password registration has been initialized.
     */
    protected function sendRegistrationInitializedResponse(Request $request, string $secret): RedirectResponse
    {
        return redirect()->route('auth.credentials.register_totp.confirm');
    }

    /**
     * Sends a response that displays the time-based one-time-password confirmation page.
     */
    protected function sendConfirmationPageResponse(Request $request, string $secret): View
    {
        return view('auth.settings.confirm_totp', [
            'qrImage' => $this->generateSetupQrImage($request, $secret),
            'randomName' => Generator::generate('-'),
            'secret' => $secret,
        ]);
    }

    /**
     * Sends a response indicating that the time-based one-time-password credential has been registered.
     *
     * {!! '@' !!}param  \ClaudioDekker\LaravelAuth\MultiFactorCredential  $credential
     */
    protected function sendCredentialRegisteredResponse(Request $request, $credential): RedirectResponse
    {
        return redirect()->route('auth.settings')->with('status', __('laravel-auth::auth.settings.totp-registered'));
    }

    /**
     * Sends a response indicating that the time-based one-time-password credential registration has been cancelled.
     */
    protected function sendRegistrationCancelledResponse(Request $request): RedirectResponse
    {
        return redirect()->route('auth.settings');
    }

    /**
     * Sends a response indicating that the time-based one-time-password registration state is invalid.
     *
     * {!! '@' !!}throws \Symfony\Component\HttpKernel\Exception\HttpException
     */
    protected function sendInvalidRegistrationStateResponse(Request $request): void
    {
        abort(428, 'The current time-based one-time-password credential registration state is invalid.');
    }

    /**
     * Sends a response indicating that the provided confirmation code is invalid.
     *
     * {!! '@' !!}throws \Illuminate\Validation\ValidationException
     */
    protected function sendInvalidConfirmationCodeResponse(Request $request): void
    {
        throw ValidationException::withMessages([
            'code' => __('laravel-auth::auth.challenge.totp'),
        ]);
    }
}
