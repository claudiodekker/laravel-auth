namespace App\Http\Controllers\Auth\Settings;

use ClaudioDekker\LaravelAuth\CredentialType;
use ClaudioDekker\LaravelAuth\Http\Controllers\Settings\CredentialsController as BaseController;
use ClaudioDekker\LaravelAuth\LaravelAuth;
use Illuminate\Contracts\View\View;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Collection;

class CredentialsController extends BaseController
{
    /**
     * Display an overview of all security-related settings.
     *
     * {!! '@' !!}see static::sendOverviewPageResponse()
     */
    public function index(Request $request): View
    {
        return parent::index($request);
    }

    /**
     * Delete a multi-factor credential.
     *
     * {!! '@' !!}see static::sendCredentialNotFoundResponse()
     * {!! '@' !!}see static::sendCredentialDeletedResponse()
     *
     * {!! '@' !!}param  string  $id
     */
    public function destroy(Request $request, mixed $id): RedirectResponse
    {
        return parent::destroy($request, $id);
    }

    /**
     * Sends a response that displays the credential overview page.
     */
    protected function sendOverviewPageResponse(Request $request, Collection $mfaCredentials): View
    {
        $groupedCredentials = $mfaCredentials->groupBy(fn ($credential) => $credential->type->value);

        return view('auth.settings.credentials', [
            'totpCredentials' => $groupedCredentials->get(CredentialType::TOTP->value, new Collection()),
            'publicKeyCredentials' => $groupedCredentials->get(CredentialType::PUBLIC_KEY->value, new Collection()),
        ]);
    }

    /**
     * Sends a response indicating that the multi-factor credential could not be found.
     *
     * {!! '@' !!}param  string  $id
     *
     * {!! '@' !!}throws \Illuminate\Database\Eloquent\ModelNotFoundException
     */
    protected function sendCredentialNotFoundResponse(Request $request, mixed $id): void
    {
        throw (new ModelNotFoundException())->setModel(
            LaravelAuth::multiFactorCredentialModel(),
            $id
        );
    }

    /**
     * Sends a response indicating that the multi-factor credential was deleted.
     *
     * {!! '@' !!}param  \ClaudioDekker\LaravelAuth\MultiFactorCredential  $credential
     */
    protected function sendCredentialDeletedResponse(Request $request, $credential): RedirectResponse
    {
        return redirect()->route('auth.settings')
            ->with('status', __('laravel-auth::auth.settings.credential-deleted'));
    }
}
